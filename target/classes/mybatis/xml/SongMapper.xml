<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fs.dreams.mapper.SongMapper">
  <resultMap id="BaseResultMap" type="com.fs.dreams.Song">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="album_src_id" jdbcType="BIGINT" property="albumSrcId" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="src_id" jdbcType="BIGINT" property="srcId" />
    <result column="mv_id" jdbcType="BIGINT" property="mvId" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="popularity" jdbcType="INTEGER" property="popularity" />
    <result column="comment_thread_id" jdbcType="VARCHAR" property="commentThreadId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fs.dreams.Song">
    <result column="lyric" jdbcType="LONGVARCHAR" property="lyric" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, album_src_id, duration, src_id, mv_id, score, popularity, comment_thread_id, 
    create_time
  </sql>
  <sql id="Blob_Column_List">
    lyric
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from song
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fs.dreams.Song">
    insert into song (id, name, album_src_id, 
      duration, src_id, mv_id, 
      score, popularity, comment_thread_id, 
      create_time, lyric)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{albumSrcId,jdbcType=BIGINT}, 
      #{duration,jdbcType=INTEGER}, #{srcId,jdbcType=BIGINT}, #{mvId,jdbcType=BIGINT}, 
      #{score,jdbcType=INTEGER}, #{popularity,jdbcType=INTEGER}, #{commentThreadId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lyric,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fs.dreams.Song">
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="albumSrcId != null">
        album_src_id,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="srcId != null">
        src_id,
      </if>
      <if test="mvId != null">
        mv_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="popularity != null">
        popularity,
      </if>
      <if test="commentThreadId != null">
        comment_thread_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lyric != null">
        lyric,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="albumSrcId != null">
        #{albumSrcId,jdbcType=BIGINT},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="srcId != null">
        #{srcId,jdbcType=BIGINT},
      </if>
      <if test="mvId != null">
        #{mvId,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="popularity != null">
        #{popularity,jdbcType=INTEGER},
      </if>
      <if test="commentThreadId != null">
        #{commentThreadId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lyric != null">
        #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fs.dreams.Song">
    update song
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="albumSrcId != null">
        album_src_id = #{albumSrcId,jdbcType=BIGINT},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="srcId != null">
        src_id = #{srcId,jdbcType=BIGINT},
      </if>
      <if test="mvId != null">
        mv_id = #{mvId,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="popularity != null">
        popularity = #{popularity,jdbcType=INTEGER},
      </if>
      <if test="commentThreadId != null">
        comment_thread_id = #{commentThreadId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lyric != null">
        lyric = #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fs.dreams.Song">
    update song
    set name = #{name,jdbcType=VARCHAR},
      album_src_id = #{albumSrcId,jdbcType=BIGINT},
      duration = #{duration,jdbcType=INTEGER},
      src_id = #{srcId,jdbcType=BIGINT},
      mv_id = #{mvId,jdbcType=BIGINT},
      score = #{score,jdbcType=INTEGER},
      popularity = #{popularity,jdbcType=INTEGER},
      comment_thread_id = #{commentThreadId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      lyric = #{lyric,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fs.dreams.Song">
    update song
    set name = #{name,jdbcType=VARCHAR},
      album_src_id = #{albumSrcId,jdbcType=BIGINT},
      duration = #{duration,jdbcType=INTEGER},
      src_id = #{srcId,jdbcType=BIGINT},
      mv_id = #{mvId,jdbcType=BIGINT},
      score = #{score,jdbcType=INTEGER},
      popularity = #{popularity,jdbcType=INTEGER},
      comment_thread_id = #{commentThreadId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>